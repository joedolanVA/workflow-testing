name: Trigger Power Apps Flow

on:
  # Trigger manually from GitHub UI
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod
      custom_payload:
        description: 'Custom JSON payload (optional)'
        required: false
        type: string
  
  # Trigger on push to main branch
  #push:
    #branches: [ main ]
  
  # Trigger on pull request
  #pull_request:
    #branches: [ main ]

jobs:
  trigger-flow:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up environment variables
      run: |
        echo "TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "FLOW_TRIGGER_URL=${{ secrets.POWER_APPS_FLOW_URL }}" >> $GITHUB_ENV
        echo "SCOPE=https://service.flow.microsoft.com/.default" >> $GITHUB_ENV
    
    - name: Prepare JSON payload
      run: |
        if [ -n "${{ github.event.inputs.custom_payload }}" ]; then
          echo "JSON_PAYLOAD=${{ github.event.inputs.custom_payload }}" >> $GITHUB_ENV
        else
          # Default payload with GitHub context
          JSON_PAYLOAD=$(cat <<EOF
        {
          "repository": "${{ github.repository }}",
          "branch": "${{ github.ref_name }}",
          "commit_sha": "${{ github.sha }}",
          "actor": "${{ github.actor }}",
          "workflow": "${{ github.workflow }}",
          "environment": "${{ github.event.inputs.environment || 'auto' }}",
          "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        }
        EOF
          )
          echo "JSON_PAYLOAD=$JSON_PAYLOAD" >> $GITHUB_ENV
        fi
    
    - name: Get Azure AD Access Token
      id: get_token
      run: |
        echo "Getting Azure AD access token..."
        
        TOKEN_RESPONSE=$(curl -s -X POST \
          "https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token" \
          -H "Content-Type: application/x-www-form-urlencoded" \
          -d "grant_type=client_credentials" \
          -d "client_id=${CLIENT_ID}" \
          -d "client_secret=${CLIENT_SECRET}" \
          -d "scope=${SCOPE}")
        
        ACCESS_TOKEN=$(echo $TOKEN_RESPONSE | jq -r '.access_token')
        
        if [ "$ACCESS_TOKEN" = "null" ] || [ -z "$ACCESS_TOKEN" ]; then
          echo "Failed to get access token. Response:"
          echo $TOKEN_RESPONSE
          exit 1
        fi
        
        echo "Successfully obtained access token"
        echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV
        echo "::add-mask::$ACCESS_TOKEN"  # Mask token in logs
    
    - name: Trigger Power Apps Flow
      run: |
        echo "Triggering Power Apps Flow..."
        echo "Flow URL: $FLOW_TRIGGER_URL"
        echo "Payload: $JSON_PAYLOAD"
        
        FLOW_RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" -X POST \
          "${FLOW_TRIGGER_URL}" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${ACCESS_TOKEN}" \
          -d "${JSON_PAYLOAD}")
        
        # Extract HTTP status code
        HTTP_STATUS=$(echo "$FLOW_RESPONSE" | grep "HTTP_STATUS:" | cut -d: -f2)
        RESPONSE_BODY=$(echo "$FLOW_RESPONSE" | sed '/HTTP_STATUS:/d')
        
        echo "HTTP Status: $HTTP_STATUS"
        echo "Response Body: $RESPONSE_BODY"
        
        # Check if request was successful
        if [ "$HTTP_STATUS" -ge 200 ] && [ "$HTTP_STATUS" -lt 300 ]; then
          echo "✅ Power Apps Flow triggered successfully!"
        else
          echo "❌ Failed to trigger Power Apps Flow"
          exit 1
        fi
    
    - name: Create summary
      if: always()
      run: |
        echo "## Power Apps Flow Trigger Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ github.event.inputs.environment || 'auto' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ job.status }}" = "success" ]; then
          echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Status**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
        fi
